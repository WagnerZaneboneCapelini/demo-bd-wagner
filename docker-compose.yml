services:

  devcontainer:
    build:
      context: .
      target: dev
      args:
        PYTHON_VERSION: ${PYTHON_VERSION:-3.12}
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    environment:
      - POETRY_PYPI_TOKEN_PYPI
    volumes:
      - ..:/workspaces
      - command-history-volume:/home/user/.history/

  dev:
    extends: devcontainer
    stdin_open: true
    tty: true
    entrypoint: []
    command:
      [
        "sh",
        "-c",
        "sudo chown user $$SSH_AUTH_SOCK && cp --update /opt/build/poetry/poetry.lock /workspaces/demo-bd/ && mkdir -p /workspaces/demo-bd/.git/hooks/ && cp --update /opt/build/git/* /workspaces/demo-bd/.git/hooks/ && zsh"
      ]
    environment:
      - POETRY_PYPI_TOKEN_PYPI
      - SSH_AUTH_SOCK=/run/host-services/ssh-auth.sock
    ports:
      - "8000"
    volumes:
      - ~/.gitconfig:/etc/gitconfig
      - ~/.ssh/known_hosts:/home/user/.ssh/known_hosts
      - ${SSH_AGENT_AUTH_SOCK:-/run/host-services/ssh-auth.sock}:/run/host-services/ssh-auth.sock
    profiles:
      - dev

  app:
    build:
      context: .
      target: app
    tty: true
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=dev
    env_file:
      - dev.env
    profiles:
      - app

  dozzle:
    image: amir20/dozzle:latest
    restart: unless-stopped
    environment:
      DOZZLE_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8088:8080

  db:
    image: postgres:16.3
    restart: unless-stopped
    env_file:
      - dev.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4:9.1
    env_file:
      - dev.env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - pgadmin_data:/home/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:
  command-history-volume:
